from backend.wallet.transaction import Transaction

class TransactionPool:
    def __init__(self) -> None:
        self.transaction_map = {}

    def set_transaction(self, transaction: Transaction):
        """
        Set a transaction in the transaction pool

        Args:
            transaction (Transaction): incoming Transaction instance
        """
        self.transaction_map[transaction.id] = transaction

    def existing_transaction(self, address) -> Transaction:
        """
        Find a transaction generated by the address in the local transaction pool

        Args:
            address: Sender Wallet Address

        Returns:
            Transaction | None: If found returns the transaction instance in local pool
        """
        for transaction in self.transaction_map.values():
            if transaction.input['address'] == address:
                return transaction

    def transaction_data(self) -> list:
        """
        Returns:
            list: Transactions in transaction pool represented in JSON serialized form
        """
        return list(map(
                lambda transaction: transaction.to_json(), 
                self.transaction_map.values()
        ))